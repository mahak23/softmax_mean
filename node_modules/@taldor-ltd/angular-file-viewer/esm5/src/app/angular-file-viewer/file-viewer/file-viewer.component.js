/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FileMimeType } from './file-mime-type';
var FileViewerComponent = /** @class */ (function () {
    function FileViewerComponent() {
        this.fileMimeType = FileMimeType;
        this.pdfZoom = 1;
    }
    FileViewerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tld-file-viewer',
                    template: "<span [ngSwitch]=\"type\">\r\n  <span *ngSwitchCase=\"fileMimeType.PDF\">\r\n    <pdf-viewer [src]=\"src\" [show-all]=\"true\" [zoom]=\"pdfZoom\"></pdf-viewer>\r\n  </span>\r\n  <span *ngSwitchCase=\"fileMimeType.JPEG\">\r\n    <img [src]=\"src\" class=\"img-responsive margin-auto\">\r\n  </span>\r\n  <span *ngSwitchCase=\"fileMimeType.PNG\">\r\n    <img [src]=\"src\" class=\"img-responsive margin-auto\">\r\n  </span>\r\n  <span *ngSwitchCase=\"fileMimeType.MP4\">\r\n    <video controls width=\"100%\">\r\n      <source [src]=\"src\" type=\"video/mp4\">\r\n      Your browser does not support HTML5 video.\r\n    </video>\r\n  </span>\r\n  <span *ngSwitchDefault>\r\n    <span #content><ng-content></ng-content></span>\r\n    <span *ngIf=\"!content.innerHTML.trim()\">File type is not supported</span>\r\n  </span>\r\n</span>",
                    styles: [""]
                }] }
    ];
    FileViewerComponent.propDecorators = {
        type: [{ type: Input }],
        src: [{ type: Input }],
        pdfZoom: [{ type: Input }]
    };
    return FileViewerComponent;
}());
export { FileViewerComponent };
if (false) {
    /** @type {?} */
    FileViewerComponent.prototype.fileMimeType;
    /** @type {?} */
    FileViewerComponent.prototype.type;
    /** @type {?} */
    FileViewerComponent.prototype.src;
    /** @type {?} */
    FileViewerComponent.prototype.pdfZoom;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS12aWV3ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhbGRvci1sdGQvYW5ndWxhci1maWxlLXZpZXdlci8iLCJzb3VyY2VzIjpbInNyYy9hcHAvYW5ndWxhci1maWxlLXZpZXdlci9maWxlLXZpZXdlci9maWxlLXZpZXdlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDtJQUFBO1FBTUUsaUJBQVksR0FBRyxZQUFZLENBQUM7UUFHbkIsWUFBTyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDOztnQkFWQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsMDBCQUEyQzs7aUJBRTVDOzs7dUJBR0UsS0FBSztzQkFDTCxLQUFLOzBCQUNMLEtBQUs7O0lBQ1IsMEJBQUM7Q0FBQSxBQVZELElBVUM7U0FMWSxtQkFBbUI7OztJQUM5QiwyQ0FBNEI7O0lBQzVCLG1DQUE0Qjs7SUFDNUIsa0NBQWtCOztJQUNsQixzQ0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZpbGVNaW1lVHlwZSB9IGZyb20gJy4vZmlsZS1taW1lLXR5cGUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd0bGQtZmlsZS12aWV3ZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9maWxlLXZpZXdlci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZmlsZS12aWV3ZXIuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGaWxlVmlld2VyQ29tcG9uZW50IHtcclxuICBmaWxlTWltZVR5cGUgPSBGaWxlTWltZVR5cGU7XHJcbiAgQElucHV0KCkgdHlwZTogRmlsZU1pbWVUeXBlO1xyXG4gIEBJbnB1dCgpIHNyYzogYW55O1xyXG4gIEBJbnB1dCgpIHBkZlpvb20gPSAxO1xyXG59XHJcbiJdfQ==