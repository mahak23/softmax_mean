/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FileMimeType } from './file-mime-type';
export class FileViewerComponent {
    constructor() {
        this.fileMimeType = FileMimeType;
        this.pdfZoom = 1;
    }
}
FileViewerComponent.decorators = [
    { type: Component, args: [{
                selector: 'tld-file-viewer',
                template: "<span [ngSwitch]=\"type\">\r\n  <span *ngSwitchCase=\"fileMimeType.PDF\">\r\n    <pdf-viewer [src]=\"src\" [show-all]=\"true\" [zoom]=\"pdfZoom\"></pdf-viewer>\r\n  </span>\r\n  <span *ngSwitchCase=\"fileMimeType.JPEG\">\r\n    <img [src]=\"src\" class=\"img-responsive margin-auto\">\r\n  </span>\r\n  <span *ngSwitchCase=\"fileMimeType.PNG\">\r\n    <img [src]=\"src\" class=\"img-responsive margin-auto\">\r\n  </span>\r\n  <span *ngSwitchCase=\"fileMimeType.MP4\">\r\n    <video controls width=\"100%\">\r\n      <source [src]=\"src\" type=\"video/mp4\">\r\n      Your browser does not support HTML5 video.\r\n    </video>\r\n  </span>\r\n  <span *ngSwitchDefault>\r\n    <span #content><ng-content></ng-content></span>\r\n    <span *ngIf=\"!content.innerHTML.trim()\">File type is not supported</span>\r\n  </span>\r\n</span>",
                styles: [""]
            }] }
];
FileViewerComponent.propDecorators = {
    type: [{ type: Input }],
    src: [{ type: Input }],
    pdfZoom: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FileViewerComponent.prototype.fileMimeType;
    /** @type {?} */
    FileViewerComponent.prototype.type;
    /** @type {?} */
    FileViewerComponent.prototype.src;
    /** @type {?} */
    FileViewerComponent.prototype.pdfZoom;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS12aWV3ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhbGRvci1sdGQvYW5ndWxhci1maWxlLXZpZXdlci8iLCJzb3VyY2VzIjpbInNyYy9hcHAvYW5ndWxhci1maWxlLXZpZXdlci9maWxlLXZpZXdlci9maWxlLXZpZXdlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQU9oRCxNQUFNLE9BQU8sbUJBQW1CO0lBTGhDO1FBTUUsaUJBQVksR0FBRyxZQUFZLENBQUM7UUFHbkIsWUFBTyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDOzs7WUFWQSxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsMDBCQUEyQzs7YUFFNUM7OzttQkFHRSxLQUFLO2tCQUNMLEtBQUs7c0JBQ0wsS0FBSzs7OztJQUhOLDJDQUE0Qjs7SUFDNUIsbUNBQTRCOztJQUM1QixrQ0FBa0I7O0lBQ2xCLHNDQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRmlsZU1pbWVUeXBlIH0gZnJvbSAnLi9maWxlLW1pbWUtdHlwZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3RsZC1maWxlLXZpZXdlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2ZpbGUtdmlld2VyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9maWxlLXZpZXdlci5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEZpbGVWaWV3ZXJDb21wb25lbnQge1xyXG4gIGZpbGVNaW1lVHlwZSA9IEZpbGVNaW1lVHlwZTtcclxuICBASW5wdXQoKSB0eXBlOiBGaWxlTWltZVR5cGU7XHJcbiAgQElucHV0KCkgc3JjOiBhbnk7XHJcbiAgQElucHV0KCkgcGRmWm9vbSA9IDE7XHJcbn1cclxuIl19